
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '>,"\xdd\xcc\xe6\r\x88\xb8#@Tk\x88\x06\xaa'
    
_lr_action_items = {'PROGRAM':([0,],[1,]),'PRINT':([10,14,15,16,21,73,86,92,],[17,-15,17,-16,-17,-18,-27,-24,]),'DIFF':([36,37,40,41,43,44,45,47,56,58,60,61,62,65,78,79,80,81,82,],[-44,-41,-48,-45,-47,-48,67,-46,-42,-36,-39,-43,-32,-35,-40,-37,-38,-33,-34,]),')':([34,35,36,37,40,41,43,44,45,46,47,48,51,53,54,55,56,58,60,61,62,65,66,69,77,78,79,80,81,82,83,84,85,],[-48,-48,-44,-41,-48,-45,-47,-48,-48,71,-46,72,-28,-31,-29,78,-42,-36,-39,-43,-32,-35,-19,-23,-30,-40,-37,-38,-33,-34,-22,-21,-20,]),'(':([17,18,27,28,29,38,52,57,59,63,64,67,68,70,],[27,28,38,38,38,38,38,38,38,38,38,38,38,38,]),'+':([27,28,29,36,37,38,40,41,43,44,47,52,56,57,58,59,60,61,63,64,67,68,70,78,79,80,],[39,39,39,-44,-41,39,-48,-45,-47,63,-46,39,-42,39,-36,39,-39,-43,39,39,39,39,39,-40,-37,-38,]),'*':([36,37,40,41,43,47,56,61,78,],[-44,-41,57,-45,-47,-46,-42,-43,-40,]),'-':([27,28,29,36,37,38,40,41,43,44,47,52,56,57,58,59,60,61,63,64,67,68,70,78,79,80,],[42,42,42,-44,-41,42,-48,-45,-47,64,-46,42,-42,42,-36,42,-39,-43,42,42,42,42,42,-40,-37,-38,]),',':([12,34,35,36,37,40,41,43,44,45,47,56,58,60,61,62,65,66,69,78,79,80,81,82,83,84,85,],[22,52,52,-44,-41,-48,-45,-47,-48,-48,-46,-42,-36,-39,-43,-32,-35,-19,-23,-40,-37,-38,-33,-34,-22,-21,-20,]),'/':([36,37,40,41,43,47,56,61,78,],[-44,-41,59,-45,-47,-46,-42,-43,-40,]),';':([3,25,31,32,33,36,37,40,41,43,44,45,47,49,56,58,60,61,62,65,66,69,71,78,79,80,81,82,83,84,85,87,89,90,91,],[4,-12,50,-10,-11,-44,-41,-48,-45,-47,-48,-48,-46,73,-42,-36,-39,-43,-32,-35,-19,-23,86,-40,-37,-38,-33,-34,-22,-21,-20,-48,92,-26,-25,]),':':([12,],[24,]),'=':([19,],[29,]),'<':([36,37,40,41,43,44,45,47,56,58,60,61,62,65,78,79,80,81,82,],[-44,-41,-48,-45,-47,-48,68,-46,-42,-36,-39,-43,-32,-35,-40,-37,-38,-33,-34,]),'$end':([2,9,25,],[0,-1,-12,]),'ELSE':([25,87,],[-12,88,]),'>':([36,37,40,41,43,44,45,47,56,58,60,61,62,65,78,79,80,81,82,],[-44,-41,-48,-45,-47,-48,70,-46,-42,-36,-39,-43,-32,-35,-40,-37,-38,-33,-34,]),'VAR':([4,],[7,]),'ID':([1,7,10,14,15,16,21,22,27,28,29,38,39,42,50,52,57,59,63,64,67,68,70,73,86,92,],[3,12,19,-15,19,-16,-17,12,41,41,41,41,41,41,12,41,41,41,41,41,41,41,41,-18,-27,-24,]),'IF':([10,14,15,16,21,73,86,92,],[18,-15,18,-16,-17,-18,-27,-24,]),'CTES':([27,52,],[35,35,]),'INT':([24,],[32,]),'FLOAT':([24,],[33,]),'CTEF':([27,28,29,38,39,42,52,57,59,63,64,67,68,70,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'{':([4,5,6,8,11,23,30,50,72,74,75,76,88,],[-48,-2,10,-3,-4,-5,-6,-48,10,-8,-7,-9,10,]),'CTEI':([27,28,29,38,39,42,52,57,59,63,64,67,68,70,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'}':([10,13,14,15,16,20,21,26,73,86,92,],[-48,25,-15,-48,-16,-14,-17,-13,-18,-27,-24,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([4,],[5,]),'termino2':([40,],[58,]),'termino':([27,28,29,38,52,57,59,63,64,67,68,70,],[44,44,44,44,44,79,80,44,44,44,44,44,]),'condicion2':([87,],[89,]),'bloque':([6,72,88,],[9,87,91,]),'varcte':([27,28,29,38,39,42,52,57,59,63,64,67,68,70,],[36,36,36,36,56,61,36,36,36,36,36,36,36,36,]),'tipo':([24,],[31,]),'exp2':([44,],[62,]),'estatuto':([10,15,],[15,15,]),'vars3':([12,],[23,]),'vars2':([7,22,50,],[11,30,74,]),'condicion':([10,15,],[16,16,]),'factor':([27,28,29,38,52,57,59,63,64,67,68,70,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'empty':([4,10,15,34,35,40,44,45,50,87,],[8,20,20,53,53,60,65,69,76,90,]),'expresion2':([45,],[66,]),'programa2':([4,],[6,]),'vars4':([50,],[75,]),'escritura2':([27,52,],[46,77,]),'escritura3':([34,35,],[51,54,]),'expresion':([27,28,29,38,52,],[34,48,49,55,34,]),'bloque2':([10,15,],[13,26,]),'asignacion':([10,15,],[14,14,]),'factor2':([27,28,29,38,52,57,59,63,64,67,68,70,],[37,37,37,37,37,37,37,37,37,37,37,37,]),'programa':([0,],[2,]),'exp':([27,28,29,38,52,63,64,67,68,70,],[45,45,45,45,45,81,82,83,84,85,]),'escritura':([10,15,],[21,21,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID ; programa2 bloque','programa',5,'p_programa','parser.py',8),
  ('programa2 -> vars','programa2',1,'p_programa2','parser.py',11),
  ('programa2 -> empty','programa2',1,'p_programa2','parser.py',12),
  ('vars -> VAR vars2','vars',2,'p_vars','parser.py',15),
  ('vars2 -> ID vars3','vars2',2,'p_vars2','parser.py',18),
  ('vars3 -> , vars2','vars3',2,'p_vars3','parser.py',21),
  ('vars3 -> : tipo ; vars4','vars3',4,'p_vars3','parser.py',22),
  ('vars4 -> vars2','vars4',1,'p_vars4','parser.py',25),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',26),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',29),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',30),
  ('bloque -> { bloque2 }','bloque',3,'p_bloque','parser.py',33),
  ('bloque2 -> estatuto bloque2','bloque2',2,'p_bloque2','parser.py',36),
  ('bloque2 -> empty','bloque2',1,'p_bloque2','parser.py',37),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',40),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',41),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',42),
  ('asignacion -> ID = expresion ;','asignacion',4,'p_asignacion','parser.py',45),
  ('expresion -> exp expresion2','expresion',2,'p_expresion','parser.py',48),
  ('expresion2 -> > exp','expresion2',2,'p_expresion2','parser.py',51),
  ('expresion2 -> < exp','expresion2',2,'p_expresion2','parser.py',52),
  ('expresion2 -> DIFF exp','expresion2',2,'p_expresion2','parser.py',53),
  ('expresion2 -> empty','expresion2',1,'p_expresion2','parser.py',54),
  ('condicion -> IF ( expresion ) bloque condicion2 ;','condicion',7,'p_condicion','parser.py',57),
  ('condicion2 -> ELSE bloque','condicion2',2,'p_condicion2','parser.py',60),
  ('condicion2 -> empty','condicion2',1,'p_condicion2','parser.py',61),
  ('escritura -> PRINT ( escritura2 ) ;','escritura',5,'p_escritura','parser.py',64),
  ('escritura2 -> expresion escritura3','escritura2',2,'p_escritura2','parser.py',67),
  ('escritura2 -> CTES escritura3','escritura2',2,'p_escritura2','parser.py',68),
  ('escritura3 -> , escritura2','escritura3',2,'p_escritura3','parser.py',71),
  ('escritura3 -> empty','escritura3',1,'p_escritura3','parser.py',72),
  ('exp -> termino exp2','exp',2,'p_exp','parser.py',75),
  ('exp2 -> + exp','exp2',2,'p_exp2','parser.py',78),
  ('exp2 -> - exp','exp2',2,'p_exp2','parser.py',79),
  ('exp2 -> empty','exp2',1,'p_exp2','parser.py',80),
  ('termino -> factor termino2','termino',2,'p_termino','parser.py',83),
  ('termino2 -> * termino','termino2',2,'p_termino2','parser.py',86),
  ('termino2 -> / termino','termino2',2,'p_termino2','parser.py',87),
  ('termino2 -> empty','termino2',1,'p_termino2','parser.py',88),
  ('factor -> ( expresion )','factor',3,'p_factor','parser.py',91),
  ('factor -> factor2','factor',1,'p_factor','parser.py',92),
  ('factor2 -> + varcte','factor2',2,'p_factor2','parser.py',95),
  ('factor2 -> - varcte','factor2',2,'p_factor2','parser.py',96),
  ('factor2 -> varcte','factor2',1,'p_factor2','parser.py',97),
  ('varcte -> ID','varcte',1,'p_varcte','parser.py',100),
  ('varcte -> CTEI','varcte',1,'p_varcte','parser.py',101),
  ('varcte -> CTEF','varcte',1,'p_varcte','parser.py',102),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',105),
]
