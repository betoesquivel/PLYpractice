Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID ; vars bloque
Rule 2     programa -> PROGRAM ID ; bloque
Rule 3     vars -> VAR vars2
Rule 4     vars2 -> ID : tipo ; vars3
Rule 5     vars2 -> ID , vars2
Rule 6     vars3 -> vars2
Rule 7     vars3 -> empty
Rule 8     tipo -> INT
Rule 9     tipo -> FLOAT
Rule 10    bloque -> { bloque2
Rule 11    bloque2 -> estatuto bloque2
Rule 12    bloque2 -> }
Rule 13    estatuto -> asignacion
Rule 14    estatuto -> condicion
Rule 15    estatuto -> escritura
Rule 16    asignacion -> ID = expresion ;
Rule 17    expresion -> exp expresion2 exp
Rule 18    expresion2 -> >
Rule 19    expresion2 -> <
Rule 20    expresion2 -> DIFF
Rule 21    condicion -> IF ( expresion ) bloque condicion2
Rule 22    condicion2 -> ELSE bloque ;
Rule 23    condicion2 -> ;
Rule 24    escritura -> PRINT ( escritura2
Rule 25    escritura2 -> expresion ,
Rule 26    escritura2 -> CTES ,
Rule 27    escritura2 -> ) ;
Rule 28    exp -> termino exp2
Rule 29    exp2 -> + exp
Rule 30    exp2 -> - exp
Rule 31    exp2 -> empty
Rule 32    termino -> factor termino2
Rule 33    termino2 -> * termino
Rule 34    termino2 -> / termino
Rule 35    termino2 -> empty
Rule 36    factor -> ( expresion )
Rule 37    factor -> + varcte
Rule 38    factor -> - varcte
Rule 39    factor -> empty
Rule 40    varcte -> ID
Rule 41    varcte -> CTEI
Rule 42    varcte -> CTEF
Rule 43    empty -> <empty>

Terminals, with rules where they appear

(                    : 21 24 36
)                    : 21 27 36
*                    : 33
+                    : 29 37
,                    : 5 25 26
-                    : 30 38
/                    : 34
:                    : 4
;                    : 1 2 4 16 22 23 27
<                    : 19
=                    : 16
>                    : 18
CTEF                 : 42
CTEI                 : 41
CTES                 : 26
DIFF                 : 20
ELSE                 : 22
FLOAT                : 9
ID                   : 1 2 4 5 16 40
IF                   : 21
INT                  : 8
PRINT                : 24
PROGRAM              : 1 2
VAR                  : 3
error                : 
{                    : 10
}                    : 12

Nonterminals, with rules where they appear

asignacion           : 13
bloque               : 1 2 21 22
bloque2              : 10 11
condicion            : 14
condicion2           : 21
empty                : 7 31 35 39
escritura            : 15
escritura2           : 24
estatuto             : 11
exp                  : 17 17 29 30
exp2                 : 28
expresion            : 16 21 25 36
expresion2           : 17
factor               : 32
programa             : 0
termino              : 28 33 34
termino2             : 32
tipo                 : 4
varcte               : 37 38
vars                 : 1
vars2                : 3 5 6
vars3                : 4

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID ; vars bloque
    (2) programa -> . PROGRAM ID ; bloque

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID ; vars bloque
    (2) programa -> PROGRAM . ID ; bloque

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . ; vars bloque
    (2) programa -> PROGRAM ID . ; bloque

    ;               shift and go to state 4


state 4

    (1) programa -> PROGRAM ID ; . vars bloque
    (2) programa -> PROGRAM ID ; . bloque
    (3) vars -> . VAR vars2
    (10) bloque -> . { bloque2

    VAR             shift and go to state 6
    {               shift and go to state 7

    bloque                         shift and go to state 8
    vars                           shift and go to state 5

state 5

    (1) programa -> PROGRAM ID ; vars . bloque
    (10) bloque -> . { bloque2

    {               shift and go to state 7

    bloque                         shift and go to state 9

state 6

    (3) vars -> VAR . vars2
    (4) vars2 -> . ID : tipo ; vars3
    (5) vars2 -> . ID , vars2

    ID              shift and go to state 11

    vars2                          shift and go to state 10

state 7

    (10) bloque -> { . bloque2
    (11) bloque2 -> . estatuto bloque2
    (12) bloque2 -> . }
    (13) estatuto -> . asignacion
    (14) estatuto -> . condicion
    (15) estatuto -> . escritura
    (16) asignacion -> . ID = expresion ;
    (21) condicion -> . IF ( expresion ) bloque condicion2
    (24) escritura -> . PRINT ( escritura2

    }               shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 17
    PRINT           shift and go to state 16

    bloque2                        shift and go to state 12
    asignacion                     shift and go to state 13
    estatuto                       shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 20

state 8

    (2) programa -> PROGRAM ID ; bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID ; bloque .)


state 9

    (1) programa -> PROGRAM ID ; vars bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID ; vars bloque .)


state 10

    (3) vars -> VAR vars2 .

    {               reduce using rule 3 (vars -> VAR vars2 .)


state 11

    (4) vars2 -> ID . : tipo ; vars3
    (5) vars2 -> ID . , vars2

    :               shift and go to state 22
    ,               shift and go to state 21


state 12

    (10) bloque -> { bloque2 .

    ELSE            reduce using rule 10 (bloque -> { bloque2 .)
    ;               reduce using rule 10 (bloque -> { bloque2 .)
    $end            reduce using rule 10 (bloque -> { bloque2 .)


state 13

    (13) estatuto -> asignacion .

    }               reduce using rule 13 (estatuto -> asignacion .)
    ID              reduce using rule 13 (estatuto -> asignacion .)
    IF              reduce using rule 13 (estatuto -> asignacion .)
    PRINT           reduce using rule 13 (estatuto -> asignacion .)


state 14

    (11) bloque2 -> estatuto . bloque2
    (11) bloque2 -> . estatuto bloque2
    (12) bloque2 -> . }
    (13) estatuto -> . asignacion
    (14) estatuto -> . condicion
    (15) estatuto -> . escritura
    (16) asignacion -> . ID = expresion ;
    (21) condicion -> . IF ( expresion ) bloque condicion2
    (24) escritura -> . PRINT ( escritura2

    }               shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 17
    PRINT           shift and go to state 16

    bloque2                        shift and go to state 23
    asignacion                     shift and go to state 13
    estatuto                       shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 20

state 15

    (14) estatuto -> condicion .

    }               reduce using rule 14 (estatuto -> condicion .)
    ID              reduce using rule 14 (estatuto -> condicion .)
    IF              reduce using rule 14 (estatuto -> condicion .)
    PRINT           reduce using rule 14 (estatuto -> condicion .)


state 16

    (24) escritura -> PRINT . ( escritura2

    (               shift and go to state 24


state 17

    (21) condicion -> IF . ( expresion ) bloque condicion2

    (               shift and go to state 25


state 18

    (12) bloque2 -> } .

    $end            reduce using rule 12 (bloque2 -> } .)
    ELSE            reduce using rule 12 (bloque2 -> } .)
    ;               reduce using rule 12 (bloque2 -> } .)


state 19

    (16) asignacion -> ID . = expresion ;

    =               shift and go to state 26


state 20

    (15) estatuto -> escritura .

    }               reduce using rule 15 (estatuto -> escritura .)
    ID              reduce using rule 15 (estatuto -> escritura .)
    IF              reduce using rule 15 (estatuto -> escritura .)
    PRINT           reduce using rule 15 (estatuto -> escritura .)


state 21

    (5) vars2 -> ID , . vars2
    (4) vars2 -> . ID : tipo ; vars3
    (5) vars2 -> . ID , vars2

    ID              shift and go to state 11

    vars2                          shift and go to state 27

state 22

    (4) vars2 -> ID : . tipo ; vars3
    (8) tipo -> . INT
    (9) tipo -> . FLOAT

    INT             shift and go to state 29
    FLOAT           shift and go to state 30

    tipo                           shift and go to state 28

state 23

    (11) bloque2 -> estatuto bloque2 .

    $end            reduce using rule 11 (bloque2 -> estatuto bloque2 .)
    ELSE            reduce using rule 11 (bloque2 -> estatuto bloque2 .)
    ;               reduce using rule 11 (bloque2 -> estatuto bloque2 .)


state 24

    (24) escritura -> PRINT ( . escritura2
    (25) escritura2 -> . expresion ,
    (26) escritura2 -> . CTES ,
    (27) escritura2 -> . ) ;
    (17) expresion -> . exp expresion2 exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    CTES            shift and go to state 32
    )               shift and go to state 33
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    expresion                      shift and go to state 31
    termino                        shift and go to state 38
    exp                            shift and go to state 39
    factor                         shift and go to state 36
    escritura2                     shift and go to state 40
    empty                          shift and go to state 41

state 25

    (21) condicion -> IF ( . expresion ) bloque condicion2
    (17) expresion -> . exp expresion2 exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    expresion                      shift and go to state 42
    termino                        shift and go to state 38
    exp                            shift and go to state 39
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 26

    (16) asignacion -> ID = . expresion ;
    (17) expresion -> . exp expresion2 exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    expresion                      shift and go to state 43
    termino                        shift and go to state 38
    exp                            shift and go to state 39
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 27

    (5) vars2 -> ID , vars2 .

    {               reduce using rule 5 (vars2 -> ID , vars2 .)


state 28

    (4) vars2 -> ID : tipo . ; vars3

    ;               shift and go to state 44


state 29

    (8) tipo -> INT .

    ;               reduce using rule 8 (tipo -> INT .)


state 30

    (9) tipo -> FLOAT .

    ;               reduce using rule 9 (tipo -> FLOAT .)


state 31

    (25) escritura2 -> expresion . ,

    ,               shift and go to state 45


state 32

    (26) escritura2 -> CTES . ,

    ,               shift and go to state 46


state 33

    (27) escritura2 -> ) . ;

    ;               shift and go to state 47


state 34

    (36) factor -> ( . expresion )
    (17) expresion -> . exp expresion2 exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    expresion                      shift and go to state 48
    termino                        shift and go to state 38
    exp                            shift and go to state 39
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 35

    (37) factor -> + . varcte
    (40) varcte -> . ID
    (41) varcte -> . CTEI
    (42) varcte -> . CTEF

    ID              shift and go to state 52
    CTEI            shift and go to state 49
    CTEF            shift and go to state 50

    varcte                         shift and go to state 51

state 36

    (32) termino -> factor . termino2
    (33) termino2 -> . * termino
    (34) termino2 -> . / termino
    (35) termino2 -> . empty
    (43) empty -> .

    *               shift and go to state 53
    /               shift and go to state 55
    +               reduce using rule 43 (empty -> .)
    -               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

    termino2                       shift and go to state 54
    empty                          shift and go to state 56

state 37

    (38) factor -> - . varcte
    (40) varcte -> . ID
    (41) varcte -> . CTEI
    (42) varcte -> . CTEF

    ID              shift and go to state 52
    CTEI            shift and go to state 49
    CTEF            shift and go to state 50

    varcte                         shift and go to state 57

state 38

    (28) exp -> termino . exp2
    (29) exp2 -> . + exp
    (30) exp2 -> . - exp
    (31) exp2 -> . empty
    (43) empty -> .

    +               shift and go to state 59
    -               shift and go to state 60
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

    exp2                           shift and go to state 58
    empty                          shift and go to state 61

state 39

    (17) expresion -> exp . expresion2 exp
    (18) expresion2 -> . >
    (19) expresion2 -> . <
    (20) expresion2 -> . DIFF

    >               shift and go to state 65
    <               shift and go to state 64
    DIFF            shift and go to state 62

    expresion2                     shift and go to state 63

state 40

    (24) escritura -> PRINT ( escritura2 .

    }               reduce using rule 24 (escritura -> PRINT ( escritura2 .)
    ID              reduce using rule 24 (escritura -> PRINT ( escritura2 .)
    IF              reduce using rule 24 (escritura -> PRINT ( escritura2 .)
    PRINT           reduce using rule 24 (escritura -> PRINT ( escritura2 .)


state 41

    (39) factor -> empty .

    *               reduce using rule 39 (factor -> empty .)
    /               reduce using rule 39 (factor -> empty .)
    +               reduce using rule 39 (factor -> empty .)
    -               reduce using rule 39 (factor -> empty .)
    >               reduce using rule 39 (factor -> empty .)
    <               reduce using rule 39 (factor -> empty .)
    DIFF            reduce using rule 39 (factor -> empty .)
    ,               reduce using rule 39 (factor -> empty .)
    )               reduce using rule 39 (factor -> empty .)
    ;               reduce using rule 39 (factor -> empty .)


state 42

    (21) condicion -> IF ( expresion . ) bloque condicion2

    )               shift and go to state 66


state 43

    (16) asignacion -> ID = expresion . ;

    ;               shift and go to state 67


state 44

    (4) vars2 -> ID : tipo ; . vars3
    (6) vars3 -> . vars2
    (7) vars3 -> . empty
    (4) vars2 -> . ID : tipo ; vars3
    (5) vars2 -> . ID , vars2
    (43) empty -> .

    ID              shift and go to state 11
    {               reduce using rule 43 (empty -> .)

    vars3                          shift and go to state 68
    vars2                          shift and go to state 69
    empty                          shift and go to state 70

state 45

    (25) escritura2 -> expresion , .

    }               reduce using rule 25 (escritura2 -> expresion , .)
    ID              reduce using rule 25 (escritura2 -> expresion , .)
    IF              reduce using rule 25 (escritura2 -> expresion , .)
    PRINT           reduce using rule 25 (escritura2 -> expresion , .)


state 46

    (26) escritura2 -> CTES , .

    }               reduce using rule 26 (escritura2 -> CTES , .)
    ID              reduce using rule 26 (escritura2 -> CTES , .)
    IF              reduce using rule 26 (escritura2 -> CTES , .)
    PRINT           reduce using rule 26 (escritura2 -> CTES , .)


state 47

    (27) escritura2 -> ) ; .

    }               reduce using rule 27 (escritura2 -> ) ; .)
    ID              reduce using rule 27 (escritura2 -> ) ; .)
    IF              reduce using rule 27 (escritura2 -> ) ; .)
    PRINT           reduce using rule 27 (escritura2 -> ) ; .)


state 48

    (36) factor -> ( expresion . )

    )               shift and go to state 71


state 49

    (41) varcte -> CTEI .

    *               reduce using rule 41 (varcte -> CTEI .)
    /               reduce using rule 41 (varcte -> CTEI .)
    +               reduce using rule 41 (varcte -> CTEI .)
    -               reduce using rule 41 (varcte -> CTEI .)
    >               reduce using rule 41 (varcte -> CTEI .)
    <               reduce using rule 41 (varcte -> CTEI .)
    DIFF            reduce using rule 41 (varcte -> CTEI .)
    ,               reduce using rule 41 (varcte -> CTEI .)
    )               reduce using rule 41 (varcte -> CTEI .)
    ;               reduce using rule 41 (varcte -> CTEI .)


state 50

    (42) varcte -> CTEF .

    *               reduce using rule 42 (varcte -> CTEF .)
    /               reduce using rule 42 (varcte -> CTEF .)
    +               reduce using rule 42 (varcte -> CTEF .)
    -               reduce using rule 42 (varcte -> CTEF .)
    >               reduce using rule 42 (varcte -> CTEF .)
    <               reduce using rule 42 (varcte -> CTEF .)
    DIFF            reduce using rule 42 (varcte -> CTEF .)
    ,               reduce using rule 42 (varcte -> CTEF .)
    )               reduce using rule 42 (varcte -> CTEF .)
    ;               reduce using rule 42 (varcte -> CTEF .)


state 51

    (37) factor -> + varcte .

    *               reduce using rule 37 (factor -> + varcte .)
    /               reduce using rule 37 (factor -> + varcte .)
    +               reduce using rule 37 (factor -> + varcte .)
    -               reduce using rule 37 (factor -> + varcte .)
    >               reduce using rule 37 (factor -> + varcte .)
    <               reduce using rule 37 (factor -> + varcte .)
    DIFF            reduce using rule 37 (factor -> + varcte .)
    ,               reduce using rule 37 (factor -> + varcte .)
    )               reduce using rule 37 (factor -> + varcte .)
    ;               reduce using rule 37 (factor -> + varcte .)


state 52

    (40) varcte -> ID .

    *               reduce using rule 40 (varcte -> ID .)
    /               reduce using rule 40 (varcte -> ID .)
    +               reduce using rule 40 (varcte -> ID .)
    -               reduce using rule 40 (varcte -> ID .)
    >               reduce using rule 40 (varcte -> ID .)
    <               reduce using rule 40 (varcte -> ID .)
    DIFF            reduce using rule 40 (varcte -> ID .)
    ,               reduce using rule 40 (varcte -> ID .)
    )               reduce using rule 40 (varcte -> ID .)
    ;               reduce using rule 40 (varcte -> ID .)


state 53

    (33) termino2 -> * . termino
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    termino                        shift and go to state 72
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 54

    (32) termino -> factor termino2 .

    +               reduce using rule 32 (termino -> factor termino2 .)
    -               reduce using rule 32 (termino -> factor termino2 .)
    >               reduce using rule 32 (termino -> factor termino2 .)
    <               reduce using rule 32 (termino -> factor termino2 .)
    DIFF            reduce using rule 32 (termino -> factor termino2 .)
    ,               reduce using rule 32 (termino -> factor termino2 .)
    )               reduce using rule 32 (termino -> factor termino2 .)
    ;               reduce using rule 32 (termino -> factor termino2 .)


state 55

    (34) termino2 -> / . termino
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    termino                        shift and go to state 73
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 56

    (35) termino2 -> empty .

    +               reduce using rule 35 (termino2 -> empty .)
    -               reduce using rule 35 (termino2 -> empty .)
    >               reduce using rule 35 (termino2 -> empty .)
    <               reduce using rule 35 (termino2 -> empty .)
    DIFF            reduce using rule 35 (termino2 -> empty .)
    ,               reduce using rule 35 (termino2 -> empty .)
    )               reduce using rule 35 (termino2 -> empty .)
    ;               reduce using rule 35 (termino2 -> empty .)


state 57

    (38) factor -> - varcte .

    *               reduce using rule 38 (factor -> - varcte .)
    /               reduce using rule 38 (factor -> - varcte .)
    +               reduce using rule 38 (factor -> - varcte .)
    -               reduce using rule 38 (factor -> - varcte .)
    >               reduce using rule 38 (factor -> - varcte .)
    <               reduce using rule 38 (factor -> - varcte .)
    DIFF            reduce using rule 38 (factor -> - varcte .)
    ,               reduce using rule 38 (factor -> - varcte .)
    )               reduce using rule 38 (factor -> - varcte .)
    ;               reduce using rule 38 (factor -> - varcte .)


state 58

    (28) exp -> termino exp2 .

    >               reduce using rule 28 (exp -> termino exp2 .)
    <               reduce using rule 28 (exp -> termino exp2 .)
    DIFF            reduce using rule 28 (exp -> termino exp2 .)
    ,               reduce using rule 28 (exp -> termino exp2 .)
    )               reduce using rule 28 (exp -> termino exp2 .)
    ;               reduce using rule 28 (exp -> termino exp2 .)


state 59

    (29) exp2 -> + . exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    termino                        shift and go to state 38
    exp                            shift and go to state 74
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 60

    (30) exp2 -> - . exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    >               reduce using rule 43 (empty -> .)
    <               reduce using rule 43 (empty -> .)
    DIFF            reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    termino                        shift and go to state 38
    exp                            shift and go to state 75
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 61

    (31) exp2 -> empty .

    >               reduce using rule 31 (exp2 -> empty .)
    <               reduce using rule 31 (exp2 -> empty .)
    DIFF            reduce using rule 31 (exp2 -> empty .)
    ,               reduce using rule 31 (exp2 -> empty .)
    )               reduce using rule 31 (exp2 -> empty .)
    ;               reduce using rule 31 (exp2 -> empty .)


state 62

    (20) expresion2 -> DIFF .

    (               reduce using rule 20 (expresion2 -> DIFF .)
    +               reduce using rule 20 (expresion2 -> DIFF .)
    -               reduce using rule 20 (expresion2 -> DIFF .)
    *               reduce using rule 20 (expresion2 -> DIFF .)
    /               reduce using rule 20 (expresion2 -> DIFF .)
    ,               reduce using rule 20 (expresion2 -> DIFF .)
    )               reduce using rule 20 (expresion2 -> DIFF .)
    ;               reduce using rule 20 (expresion2 -> DIFF .)


state 63

    (17) expresion -> exp expresion2 . exp
    (28) exp -> . termino exp2
    (32) termino -> . factor termino2
    (36) factor -> . ( expresion )
    (37) factor -> . + varcte
    (38) factor -> . - varcte
    (39) factor -> . empty
    (43) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 37
    *               reduce using rule 43 (empty -> .)
    /               reduce using rule 43 (empty -> .)
    ,               reduce using rule 43 (empty -> .)
    )               reduce using rule 43 (empty -> .)
    ;               reduce using rule 43 (empty -> .)

  ! +               [ reduce using rule 43 (empty -> .) ]
  ! -               [ reduce using rule 43 (empty -> .) ]

    termino                        shift and go to state 38
    exp                            shift and go to state 76
    factor                         shift and go to state 36
    empty                          shift and go to state 41

state 64

    (19) expresion2 -> < .

    (               reduce using rule 19 (expresion2 -> < .)
    +               reduce using rule 19 (expresion2 -> < .)
    -               reduce using rule 19 (expresion2 -> < .)
    *               reduce using rule 19 (expresion2 -> < .)
    /               reduce using rule 19 (expresion2 -> < .)
    ,               reduce using rule 19 (expresion2 -> < .)
    )               reduce using rule 19 (expresion2 -> < .)
    ;               reduce using rule 19 (expresion2 -> < .)


state 65

    (18) expresion2 -> > .

    (               reduce using rule 18 (expresion2 -> > .)
    +               reduce using rule 18 (expresion2 -> > .)
    -               reduce using rule 18 (expresion2 -> > .)
    *               reduce using rule 18 (expresion2 -> > .)
    /               reduce using rule 18 (expresion2 -> > .)
    ,               reduce using rule 18 (expresion2 -> > .)
    )               reduce using rule 18 (expresion2 -> > .)
    ;               reduce using rule 18 (expresion2 -> > .)


state 66

    (21) condicion -> IF ( expresion ) . bloque condicion2
    (10) bloque -> . { bloque2

    {               shift and go to state 7

    bloque                         shift and go to state 77

state 67

    (16) asignacion -> ID = expresion ; .

    }               reduce using rule 16 (asignacion -> ID = expresion ; .)
    ID              reduce using rule 16 (asignacion -> ID = expresion ; .)
    IF              reduce using rule 16 (asignacion -> ID = expresion ; .)
    PRINT           reduce using rule 16 (asignacion -> ID = expresion ; .)


state 68

    (4) vars2 -> ID : tipo ; vars3 .

    {               reduce using rule 4 (vars2 -> ID : tipo ; vars3 .)


state 69

    (6) vars3 -> vars2 .

    {               reduce using rule 6 (vars3 -> vars2 .)


state 70

    (7) vars3 -> empty .

    {               reduce using rule 7 (vars3 -> empty .)


state 71

    (36) factor -> ( expresion ) .

    *               reduce using rule 36 (factor -> ( expresion ) .)
    /               reduce using rule 36 (factor -> ( expresion ) .)
    +               reduce using rule 36 (factor -> ( expresion ) .)
    -               reduce using rule 36 (factor -> ( expresion ) .)
    >               reduce using rule 36 (factor -> ( expresion ) .)
    <               reduce using rule 36 (factor -> ( expresion ) .)
    DIFF            reduce using rule 36 (factor -> ( expresion ) .)
    ,               reduce using rule 36 (factor -> ( expresion ) .)
    )               reduce using rule 36 (factor -> ( expresion ) .)
    ;               reduce using rule 36 (factor -> ( expresion ) .)


state 72

    (33) termino2 -> * termino .

    +               reduce using rule 33 (termino2 -> * termino .)
    -               reduce using rule 33 (termino2 -> * termino .)
    >               reduce using rule 33 (termino2 -> * termino .)
    <               reduce using rule 33 (termino2 -> * termino .)
    DIFF            reduce using rule 33 (termino2 -> * termino .)
    ,               reduce using rule 33 (termino2 -> * termino .)
    )               reduce using rule 33 (termino2 -> * termino .)
    ;               reduce using rule 33 (termino2 -> * termino .)


state 73

    (34) termino2 -> / termino .

    +               reduce using rule 34 (termino2 -> / termino .)
    -               reduce using rule 34 (termino2 -> / termino .)
    >               reduce using rule 34 (termino2 -> / termino .)
    <               reduce using rule 34 (termino2 -> / termino .)
    DIFF            reduce using rule 34 (termino2 -> / termino .)
    ,               reduce using rule 34 (termino2 -> / termino .)
    )               reduce using rule 34 (termino2 -> / termino .)
    ;               reduce using rule 34 (termino2 -> / termino .)


state 74

    (29) exp2 -> + exp .

    >               reduce using rule 29 (exp2 -> + exp .)
    <               reduce using rule 29 (exp2 -> + exp .)
    DIFF            reduce using rule 29 (exp2 -> + exp .)
    ,               reduce using rule 29 (exp2 -> + exp .)
    )               reduce using rule 29 (exp2 -> + exp .)
    ;               reduce using rule 29 (exp2 -> + exp .)


state 75

    (30) exp2 -> - exp .

    >               reduce using rule 30 (exp2 -> - exp .)
    <               reduce using rule 30 (exp2 -> - exp .)
    DIFF            reduce using rule 30 (exp2 -> - exp .)
    ,               reduce using rule 30 (exp2 -> - exp .)
    )               reduce using rule 30 (exp2 -> - exp .)
    ;               reduce using rule 30 (exp2 -> - exp .)


state 76

    (17) expresion -> exp expresion2 exp .

    )               reduce using rule 17 (expresion -> exp expresion2 exp .)
    ,               reduce using rule 17 (expresion -> exp expresion2 exp .)
    ;               reduce using rule 17 (expresion -> exp expresion2 exp .)


state 77

    (21) condicion -> IF ( expresion ) bloque . condicion2
    (22) condicion2 -> . ELSE bloque ;
    (23) condicion2 -> . ;

    ELSE            shift and go to state 78
    ;               shift and go to state 80

    condicion2                     shift and go to state 79

state 78

    (22) condicion2 -> ELSE . bloque ;
    (10) bloque -> . { bloque2

    {               shift and go to state 7

    bloque                         shift and go to state 81

state 79

    (21) condicion -> IF ( expresion ) bloque condicion2 .

    }               reduce using rule 21 (condicion -> IF ( expresion ) bloque condicion2 .)
    ID              reduce using rule 21 (condicion -> IF ( expresion ) bloque condicion2 .)
    IF              reduce using rule 21 (condicion -> IF ( expresion ) bloque condicion2 .)
    PRINT           reduce using rule 21 (condicion -> IF ( expresion ) bloque condicion2 .)


state 80

    (23) condicion2 -> ; .

    }               reduce using rule 23 (condicion2 -> ; .)
    ID              reduce using rule 23 (condicion2 -> ; .)
    IF              reduce using rule 23 (condicion2 -> ; .)
    PRINT           reduce using rule 23 (condicion2 -> ; .)


state 81

    (22) condicion2 -> ELSE bloque . ;

    ;               shift and go to state 82


state 82

    (22) condicion2 -> ELSE bloque ; .

    }               reduce using rule 22 (condicion2 -> ELSE bloque ; .)
    ID              reduce using rule 22 (condicion2 -> ELSE bloque ; .)
    IF              reduce using rule 22 (condicion2 -> ELSE bloque ; .)
    PRINT           reduce using rule 22 (condicion2 -> ELSE bloque ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 24 resolved as shift
WARNING: shift/reduce conflict for - in state 24 resolved as shift
WARNING: shift/reduce conflict for + in state 25 resolved as shift
WARNING: shift/reduce conflict for - in state 25 resolved as shift
WARNING: shift/reduce conflict for + in state 26 resolved as shift
WARNING: shift/reduce conflict for - in state 26 resolved as shift
WARNING: shift/reduce conflict for + in state 34 resolved as shift
WARNING: shift/reduce conflict for - in state 34 resolved as shift
WARNING: shift/reduce conflict for + in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for + in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for + in state 59 resolved as shift
WARNING: shift/reduce conflict for - in state 59 resolved as shift
WARNING: shift/reduce conflict for + in state 60 resolved as shift
WARNING: shift/reduce conflict for - in state 60 resolved as shift
WARNING: shift/reduce conflict for + in state 63 resolved as shift
WARNING: shift/reduce conflict for - in state 63 resolved as shift
